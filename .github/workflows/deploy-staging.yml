name: Deploy to Staging

on:
  push:
    branches-ignore: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: false
        default: ''

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "staging-${{ github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site for staging
        run: |
          # Use branch name or PR number for staging path
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            STAGING_PATH="/RodriguezDioscar/pr-${{ github.event.number }}"
          else
            BRANCH_NAME="${{ github.head_ref || github.ref_name }}"
            STAGING_PATH="/RodriguezDioscar/branch-${BRANCH_NAME//\//-}"
          fi
          echo "STAGING_PATH=$STAGING_PATH" >> $GITHUB_ENV
          echo "Building for staging path: $STAGING_PATH"
          npm run build
        env:
          VITE_BASE_PATH: ${{ env.STAGING_PATH }}

      - name: Create staging index with branch info
        run: |
          # Add staging banner to built HTML
          sed -i '/<body>/a\
            <div style="background: #f59e0b; color: white; text-align: center; padding: 8px; font-weight: bold; position: fixed; top: 0; left: 0; right: 0; z-index: 9999;">\
              ðŸš§ STAGING PREVIEW - Branch: ${{ github.head_ref || github.ref_name }} ðŸš§\
            </div>\
            <div style="height: 40px;"></div>' dist/index.html

      - name: Deploy to Staging
        id: deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          destination_dir: ${{ env.STAGING_PATH }}
          keep_files: true
          publish_branch: gh-pages-staging

      - name: Comment PR with preview link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const stagingUrl = `https://dioscarr.github.io${{ env.STAGING_PATH }}`;
            const comment = `
            ## ðŸš€ Staging Preview Ready!
            
            Your changes are now available for preview:
            
            **ðŸ“± [View Preview](${stagingUrl})**
            
            This preview will be updated automatically when you push new commits to this branch.
            
            ---
            *Preview for commit: ${context.sha.substring(0, 7)}*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    steps:
      - name: Checkout gh-pages-staging
        uses: actions/checkout@v4
        with:
          ref: gh-pages-staging
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove staging files
        run: |
          rm -rf "pr-${{ github.event.number }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Remove staging files for PR #${{ github.event.number }}" || exit 0
          git push